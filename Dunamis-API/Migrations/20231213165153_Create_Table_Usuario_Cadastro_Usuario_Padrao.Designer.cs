// <auto-generated />
using System;
using Dunamis_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dunamis_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231213165153_Create_Table_Usuario_Cadastro_Usuario_Padrao")]
    partial class Create_Table_Usuario_Cadastro_Usuario_Padrao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dunamis_API.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Funcao")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("NomeCompleto")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("PasswordResetToken")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime>("TokenCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("VerificationToken")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "dunamis@dunamis.com.brr",
                            Funcao = "Administrador do Sistema",
                            NomeCompleto = "Dunamis",
                            PasswordHash = new byte[] { 195, 2, 74, 43, 172, 86, 212, 181, 114, 51, 61, 133, 103, 130, 56, 160, 46, 204, 86, 10, 178, 162, 36, 133, 157, 118, 90, 2, 239, 249, 78, 30, 196, 200, 134, 168, 240, 52, 229, 167, 79, 239, 71, 208, 159, 253, 121, 6, 138, 110, 230, 32, 201, 30, 97, 123, 5, 27, 33, 205, 154, 75, 58, 164 },
                            PasswordSalt = new byte[] { 62, 251, 188, 218, 115, 169, 220, 159, 91, 151, 209, 27, 248, 225, 243, 23, 182, 2, 93, 245, 198, 19, 28, 43, 74, 6, 51, 246, 6, 74, 125, 170 },
                            RefreshToken = "",
                            Status = "1",
                            Telefone = "(85) 3333-3333",
                            TokenCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "dunamis"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
